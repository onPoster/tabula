name: Prod Release Deployment

on:
  release:
    types: published

env:
  REACT_APP_POSTER_CONTRACT: ${{ secrets.REACT_APP_POSTER_CONTRACT }}
  REACT_APP_INFURA_KEY: ${{ secrets.REACT_APP_INFURA_KEY }}
  REACT_APP_SUBGRAPH_BASE_URL: https://api.thegraph.com/subgraphs/name/
  REACT_APP_SUBGRAPH_RINKEBY: auryn-macmillan/tabula-rinkeby
  REACT_APP_SUBGRAPH_GNOSIS_CHAIN: auryn-macmillan/tabula-gnosis-chain
  REACT_APP_SUBGRAPH_MAINNET: auryn-macmillan/tabula-mainnet
  REACT_APP_SUBGRAPH_GOERLI: auryn-macmillan/tabula-goerli
  REACT_APP_SUBGRAPH_POLYGON: auryn-macmillan/tabula-polygon
  REACT_APP_SUBGRAPH_ARBITRUM: auryn-macmillan/tabula-arbitrum
  REACT_APP_SUBGRAPH_OPTIMISM: auryn-macmillan/tabula-optimism
  REACT_APP_SUBGRAPH_OPTIMISM: auryn-macmillan/tabula-optimism-on-gnosis-chain
jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Prod
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Pin to IPFS
        id: upload
        uses: anantaramdas/ipfs-pinata-deploy-action@39bbda1ce1fe24c69c6f57861b8038278d53688d
        with:
          pin-name: Tabula - Release â€” ${ GITHUB_SHA }
          path: "./packages/app/build"
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: Pin to Crust
        uses: crustio/ipfs-crust-action@v2.0.3
        continue-on-error: true
        timeout-minutes: 2
        with:
          cid: ${{ steps.upload.outputs.hash }}
          seeds: ${{ secrets.CRUST_SEEDS }}

      - name: Convert CIDv0 to CIDv1
        id: convert_cidv0
        uses: uniswap/convert-cidv0-cidv1@v1.0.0
        with:
          cidv0: ${{ steps.upload.outputs.hash }}

      - name: Update DNS with new IPFS hash
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: "tabula.gg"
          RECORD_NAME: "_dnslink"
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        uses: textileio/cloudflare-update-dnslink@0fe7b7a1ffc865db3a4da9773f0f987447ad5848
        with:
          cid: ${{ steps.upload.outputs.hash }}

      - name: update release
        id: update_release
        uses: tubone24/update_release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          is_append_body: true
          body: |
            <br />
            IPFS hash of the deployment:
            - CIDv0: `${{ steps.upload.outputs.hash }}`
            - CIDv1: `${{ steps.convert_cidv0.outputs.cidv1 }}`

            IPFS gateways:
              - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.dweb.link/
              - https://${{ steps.convert_cidv0.outputs.cidv1 }}.ipfs.cf-ipfs.com/

      # - name: Authenticate graph cli studio
      #   working-directory: packages/subgraph
      #   run: yarn run graph auth --studio ${{ secrets.SUBGRAPH_DEPLOYMENT_KEY }}

      # - name: Deploy subgraph to Mainnet on Studio
      #   working-directory: packages/subgraph
      #   env:
      #     SUBGRAPH__MAINNET: tabula-mainnet
      #   run: yarn deploy:mainnet

      - name: Authenticate graph cli hosted service
        working-directory: packages/subgraph
        run: yarn run graph auth --product hosted-service ${{ secrets.GRAPH_ACCESS_TOKEN }}

      - name: Deploy subgraph to mainnet
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__MAINNET: auryn-macmillan/tabula-mainnet
        run: yarn deploy:mainnet

      - name: Deploy subgraph to Gnosis Chain
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__GNOSIS_CHAIN: auryn-macmillan/tabula-gnosis-chain
        run: yarn deploy:gnosis-chain

      - name: Deploy subgraph to Rinkeby
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__RINKEBY: auryn-macmillan/tabula-rinkeby
        run: yarn deploy:rinkeby

      - name: Deploy subgraph to Goerli
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__GOERLI: auryn-macmillan/tabula-goerli
        run: yarn deploy:goerli

      - name: Deploy subgraph to Polygon
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__POLYGON: auryn-macmillan/tabula-polygon
        run: yarn deploy:polygon

      - name: Deploy subgraph to Arbitrum
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__ARBITRUM: auryn-macmillan/tabula-arbitrum
        run: yarn deploy:arbitrum

      - name: Deploy subgraph to Optimism
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__OPTIMISM: auryn-macmillan/tabula-optimism
        run: yarn deploy:optimism

      - name: Deploy subgraph to Optimism on Gnosis Chain
        working-directory: packages/subgraph
        env:
          HOSTED_SERVICE_SUBGRAPH__OPTIMISM__ON__GNOSIS__CHAIN: auryn-macmillan/tabula-optimism-on-gnosis-chain
        run: yarn deploy:optimism-on-gnosis-chain

      - name: Deploy to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: ./packages/app/build
